{"version":3,"sources":["components/Card.js","components/Cardlist.js","components/Searchbox.js","components/Scroll.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","alt","src","Cardlist","robots","cardComponent","map","user","i","Searchbox","searchChange","searchfield","type","placeholder","onChange","Scroll","props","style","overflow","border","height","children","App","onSearchChange","event","setState","target","value","state","fetch","then","response","json","users","filteredRobots","this","filter","toLowerCase","includes","length","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"kOAaeA,EAXJ,SAAC,GAAmB,IAAlBC,EAAiB,EAAjBA,KAAKC,EAAY,EAAZA,MAAMC,EAAM,EAANA,GACpB,OACI,sBAAKC,UAAU,wDAAf,UACI,qBAAKC,IAAI,MAAMC,IAAG,+BAA0BH,EAA1B,cAClB,gCACI,6BAAKF,IACL,4BAAIC,WCaLK,EAlBA,SAAC,GAAY,IAAXC,EAAU,EAAVA,OACPC,EAAcD,EAAOE,KAAI,SAACC,EAAKC,GACjC,OACA,cAAC,EAAD,CAEAT,GAAIK,EAAOI,GAAGT,GACdF,KAAMO,EAAOI,GAAGX,KAChBC,MAAOM,EAAOI,GAAGV,OAHZU,MAOT,OACI,8BACKH,KCAEI,EAdC,SAAC,GAA+B,IAA9BC,EAA6B,EAA7BA,aAA6B,EAAfC,YAC5B,OACI,qBAAKX,UAAU,MAAf,SACA,uBACIA,UAAU,mCACVY,KAAK,SACLC,YAAY,gBACZC,SAAUJ,OCCPK,G,MAPD,SAACC,GACX,OACI,qBAAKC,MAAO,CAACC,SAAS,SAASC,OAAO,kBAAkBC,OAAO,SAA/D,SACCJ,EAAMK,aC0CAC,E,kDAzCX,aAAc,IAAD,8BACT,gBAaJC,eAAgB,SAACC,GACb,EAAKC,SAAS,CAACd,YAAYa,EAAME,OAAOC,SAbxC,EAAKC,MAAM,CACPxB,OAAO,GACPO,YAAY,IAJP,E,qDAQb,WAAoB,IAAD,OACfkB,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAEA,EAASC,UACxBF,MAAK,SAAAG,GAAK,OAAE,EAAKR,SAAS,CAACrB,OAAO6B,S,oBAOvC,WAAS,IAAD,OACEC,EAAiBC,KAAKP,MAAMxB,OAAOgC,QACrC,SAAAhC,GACA,OAAOA,EAAOP,KAAKwC,cAAcC,SAC7B,EAAKV,MAAMjB,YAAY0B,kBAG/B,OAA8B,IAA3BF,KAAKP,MAAMxB,OAAOmC,OACX,yCAGN,sBAAKvC,UAAU,KAAf,UACI,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWU,aAAcyB,KAAKZ,iBAC9B,cAAC,EAAD,UACA,cAAC,EAAD,CAAUnB,OAAQ8B,a,GAlChBM,aCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCCdO,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,SAM1BX,M","file":"static/js/main.eaad9e9d.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card=({name,email,id})=>{\r\n    return(\r\n        <div className='bg-light-green tc dib br3 pa3 ma2 grow bw2 shadow-5  '>\r\n            <img alt=\"Sex\" src={`https://robohash.org/${id}?200x200`}/>\r\n            <div>\r\n                <h2>{name}</h2>\r\n                <p>{email}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst Cardlist=({robots})=>{\r\n    const cardComponent=robots.map((user,i)=>{\r\n        return (\r\n        <Card \r\n        key={i} \r\n        id={robots[i].id}\r\n        name={robots[i].name} \r\n        email={robots[i].email}\r\n        />\r\n    );\r\n    })\r\n    return(\r\n        <div>\r\n            {cardComponent}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Cardlist;","import React from 'react';\r\n\r\nconst Searchbox=({searchChange, searchfield})=>{\r\n    return(\r\n        <div className=\"pa2\">\r\n        <input\r\n            className='pa3 ba b--green bg-lightest-blue'\r\n            type='Search' \r\n            placeholder=\"Search Robots\"\r\n            onChange={searchChange}\r\n        />\r\n\r\n        </div> \r\n    );\r\n}\r\n\r\nexport default Searchbox;","import React from 'react';\r\n\r\n\r\nconst Scroll= (props) => {\r\n    return (\r\n        <div style={{overflow:'scroll',border:'5px solid black',height:'600px'}}>\r\n        {props.children}\r\n        </div>\r\n    );\r\n};\r\nexport default Scroll;","import React, { Component } from 'react';\r\nimport Cardlist from '../components/Cardlist';\r\nimport Searchbox from '../components/Searchbox';\r\nimport './App.css';\r\nimport Scroll from '../components/Scroll';\r\n\r\nclass App extends Component{\r\n    constructor(){\r\n        super()\r\n        this.state={\r\n            robots:[], \r\n            searchfield:''\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n        .then(response=>response.json())\r\n        .then(users=>this.setState({robots:users}));\r\n    }\r\n\r\n    onSearchChange= (event) => {\r\n        this.setState({searchfield:event.target.value})\r\n    }\r\n\r\n    render(){\r\n        const filteredRobots = this.state.robots.filter(\r\n            robots=>{\r\n            return robots.name.toLowerCase().includes(\r\n                this.state.searchfield.toLowerCase()\r\n            );\r\n        })\r\n        if(this.state.robots.length===0){\r\n            return<h1>Loading</h1>\r\n        }else{\r\n        return (\r\n            <div className='tc'>\r\n                <h1 className='f2'>RoboFriends</h1>\r\n                <Searchbox searchChange={this.onSearchChange}/>\r\n                <Scroll>\r\n                <Cardlist robots={filteredRobots}/>\r\n                </Scroll>\r\n            </div>\r\n        );\r\n        }\r\n    }\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\n\nReactDOM.render(\n    <App/>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}